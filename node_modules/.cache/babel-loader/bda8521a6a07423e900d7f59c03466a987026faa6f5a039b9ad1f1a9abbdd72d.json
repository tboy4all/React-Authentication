{"ast":null,"code":"var _jsxFileName = \"/home/devtaiye/Desktop/REACT PRACTISE/Authentication/src/store/auth-context.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\nlet logoutTimer;\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n  if (remainingTime <= 3600) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    return null;\n  }\n  return {\n    token: storedToken,\n    duration: remainingTime\n  };\n};\nexport const AuthContextProvider = props => {\n  _s();\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n    localStorage.setItem('expirationTime', expirationTime);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n  useEffect(() => {\n    if (tokenData) {\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: contextValue,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"Lh1CfGbFk5nTLZoGW/pEiX6CFRc=\");\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","AuthContext","createContext","token","isLoggedIn","login","logout","logoutTimer","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrieveStoredToken","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","AuthContextProvider","props","tokenData","initialToken","setToken","userIsLoggedIn","logoutHandler","clearTimeout","loginHandler","setItem","setTimeout","contextValue","children"],"sources":["/home/devtaiye/Desktop/REACT PRACTISE/Authentication/src/store/auth-context.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\n\nconst AuthContext = React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n})\n\nlet logoutTimer\n\nconst calculateRemainingTime = (expirationTime) => {\n  const currentTime = new Date().getTime()\n  const adjExpirationTime = new Date(expirationTime).getTime()\n\n  const remainingDuration = adjExpirationTime - currentTime\n\n  return remainingDuration\n}\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem('token')\n  const storedExpirationDate = localStorage.getItem('expirationTime')\n\n  const remainingTime = calculateRemainingTime(storedExpirationDate)\n\n  if (remainingTime <= 3600) {\n    localStorage.removeItem('token')\n    localStorage.removeItem('expirationTime')\n    return null\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingTime,\n  }\n}\n\nexport const AuthContextProvider = (props) => {\n  const tokenData = retrieveStoredToken()\n  let initialToken\n  if (tokenData) {\n    initialToken = tokenData.token\n  }\n\n  const [token, setToken] = useState(initialToken)\n\n  const userIsLoggedIn = !!token\n\n  const logoutHandler = useCallback(() => {\n    setToken(null)\n    localStorage.removeItem('token')\n    localStorage.removeItem('expirationTime')\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer)\n    }\n  }, [])\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token)\n    localStorage.setItem('token', token)\n    localStorage.setItem('expirationTime', expirationTime)\n\n    const remainingTime = calculateRemainingTime(expirationTime)\n\n    logoutTimer = setTimeout(logoutHandler, remainingTime)\n  }\n\n  useEffect(() => {\n    if (tokenData) {\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration)\n    }\n  }, [tokenData, logoutHandler])\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n  }\n  return (\n    <div>\n      <AuthContext.Provider value={contextValue}>\n        {props.children}\n      </AuthContext.Provider>\n    </div>\n  )\n}\n\nexport default AuthContext\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}